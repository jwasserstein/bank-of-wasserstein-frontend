{"version":3,"sources":["store/actionTypes.js","services/api.js","components/Message.js","components/Button.js","components/Form.js","containers/LoginPage.js","store/actions/auth.js","store/actions/transactions.js","store/actions/accounts.js","components/Balance.js","components/ItemList.js","components/Transaction.js","containers/TransactionPage.js","hocs/withAuth.js","containers/SignupPage.js","components/NewTransactionForm.js","components/RadioContainer.js","containers/NewTransactionPage.js","components/Hero.js","components/Feature.js","components/LandingPage.js","components/AboutPage.js","containers/ProfilePage.js","components/Account.js","containers/AccountsPage.js","containers/NewAccountPage.js","containers/Navbar.js","containers/Main.js","store/reducers/auth.js","store/reducers/transactions.js","store/reducers/account.js","store/reducers/index.js","containers/App.js","store/index.js","reportWebVitals.js","index.js"],"names":["LOG_IN","LOG_OUT","GET_TRANSACTIONS","REMOVE_TRANSACTIONS","GET_ACCOUNTS","REMOVE_ACCOUNTS","UPDATE_BALANCE","CLOSE_ACCOUNT","API_BASE_URL","apiCall","type","url","data","a","toLowerCase","fetch","method","headers","localStorage","token","resp","json","d","body","JSON","stringify","Message","color","children","colorClass","className","Button","form","to","onClick","classes","Form","fields","loading","onSubmit","onChange","fieldElements","map","f","htmlFor","name","label","value","id","placeholder","autoComplete","autoCorrect","autoCapitalize","required","LoginPage","props","e","setState","state","target","preventDefault","logIn","username","password","then","error","history","push","catch","err","this","Component","connect","dispatch","Promise","resolve","reject","setItem","message","getTransactions","accountId","Error","transactions","sort","b","transactionNumber","getAccounts","accounts","Balance","accountBalance","toFixed","ItemList","items","itemProps","ItemComponent","itemName","t","propObj","Object","keys","forEach","p","length","Transaction","description","date","amount","dayjs","format","TransactionPage","closeAccount","bind","match","params","transactionReducer","lastUpdated","deleteAccount","accountType","find","_id","key","accountReducer","withAuth","ComponentToRender","Authenticate","userId","authReducer","SignupPage","repeatPassword","signUp","NewTransactionForm","transactionType","counterparty","accountTypeAnotherUser","accountTypeBetweenAcc","enabledAccounts","number","includes","min","step","checked","disabled","RadioContainer","radios","radioElements","r","NewTransactionPage","create","transaction","createTransaction","recipientAccountId","generateTransactions","num","Hero","src","alt","Feature","title","img","LandingPage","AboutPage","href","rel","data-icon","data-inline","ProfilePage","currentPassword","newPassword","repeatNewPassword","messageColor","response","joinDate","style","marginBottom","Account","link","AccountsPage","totalBalance","reduce","acc","next","accountArray","NewAccountPage","createAccount","existingAccounts","Navbar","menuActive","toggleMenu","closeMenu","logOut","removeItem","Main","path","component","DEFAULT_STATE","rootReducer","combineReducers","action","loggedInAt","Date","now","remainingAccounts","filter","store","middleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","configureStore","getItem","decoded","jwtdecode","iat","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5530b57.chunk.js","sourcesContent":["export const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const GET_TRANSACTIONS = 'GET_TRANSACTIONS';\nexport const REMOVE_TRANSACTIONS = 'REMOVE_TRANSACTIONS';\nexport const GET_ACCOUNTS = \"GET_ACCOUNTS\";\nexport const REMOVE_ACCOUNTS = \"REMOVE_ACCOUNTS\";\nexport const UPDATE_BALANCE = \"UPDATE_BALANCE\";\nexport const CLOSE_ACCOUNT = \"CLOSE_ACCOUNT\";","const API_BASE_URL = 'https://bank-of-wasserstein-api.herokuapp.com/api';\n\nexport async function apiCall(type, url, data) {\n\tif(type.toLowerCase() === 'get'){\n\t\tconst resp = await fetch(API_BASE_URL + url, {\n\t\t\tmethod: type,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': `Bearer ${localStorage.token}`\n\t\t\t}\n\t\t});\n\t\tconst d = await resp.json();\n\t\treturn d;\n\t} else {\n\t\tconst resp = await fetch(API_BASE_URL + url, {\n\t\t\tmethod: type,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': `Bearer ${localStorage.token}`\n\t\t\t},\n\t\t\tbody: JSON.stringify(data)\n\t\t});\n\t\tconst d = await resp.json();\n\t\treturn d;\n\t}\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Message.css';\n\nconst Message = ({color, children}) => {\n    const colorClass = 'Message-' + (color || 'red');\n    return (\n        <div className={'Message ' + colorClass}>{children}</div>\n    );\n};\n\nMessage.propTypes = {\n    color: PropTypes.string,\n    children: PropTypes.any\n};\n\nexport default Message;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nconst Button = ({className, form, children, to, onClick}) => {\n    const classes = className ? `Button ${className}` : 'Button';\n    if(form){\n        return <button type='submit' className={classes + ' Button-form'} onClick={onClick}>{children}</button>;\n    } else {\n        return <Link className={classes} to={to} onClick={onClick}>{children}</Link>;\n    }\n};\n\nButton.propTypes = {\n    className: PropTypes.string,\n    form: PropTypes.bool,\n    to: PropTypes.string,\n    children: PropTypes.any,\n    onClick: PropTypes.func\n};\n\nexport default Button;","import React from 'react';\nimport Button from './Button';\nimport PropTypes from 'prop-types';\nimport './Form.css';\n\nconst Form = ({fields, loading, onSubmit, onChange}) => {\n    const fieldElements = fields.map(f => (\n        <label htmlFor={f.name} key={f.name} className='Form-label'>\n            {f.label}:\n            <input type={f.type} className='Form-field' value={f.value} onChange={onChange} id={f.name} \n            name={f.name} placeholder={f.label} autoComplete='off' autoCorrect='off' autoCapitalize='none' required />\n        </label>\n    ));\n\n    return (\n        <form className='Form-form' onSubmit={onSubmit}>\n            {fieldElements}      \n            <Button form className='Form-btn'>\n                {loading ? 'Loading...' : 'Submit'}\n            </Button>\n        </form>\n        );\n};\n\nForm.propTypes = {\n    fields: PropTypes.array.isRequired,\n    loading: PropTypes.bool.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\nexport default Form;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {logIn} from '../store/actions/auth';\nimport Message from '../components/Message';\nimport Form from '../components/Form';\nimport PropTypes from 'prop-types';\nimport './LoginPage.css';\n\nclass LoginPage extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tpassword: '',\n\t\t\tloading: false,\n\t\t\terror: ''\n\t\t};\n\t}\n\t\n\tonChange = e => {\n\t\tthis.setState({...this.state, [e.target.name]: e.target.value});\n\t}\n\t\n\tonSubmit = e => {\n\t\te.preventDefault();\n\t\tthis.setState({...this.state, loading: true})\n\t\tthis.props.logIn(e.target.username.value, e.target.password.value)\n\t\t\t.then(() => {\n\t\t\t\tthis.setState({...this.state, loading: false, error: ''});\n\t\t\t\tthis.props.history.push('/accounts');\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tthis.setState({...this.state, loading: false, error: err});\n\t\t\t});\n\t}\n\t\n\trender() {\n\t\tconst {username, password, loading, error} = this.state;\n\t\t\n\t\tconst fields = [\n\t\t\t{label: 'Username', name: 'username', type: 'text', value: username},\n\t\t\t{label: 'Password', name: 'password', type: 'password', value: password},\t\n\t\t];\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2 className='LoginPage-message' key='LoginPage-message'>Log in to Bank of Wasserstein.</h2>\n\t\t\t\t{error && (\n\t\t\t\t\t<Message color='red'>\n\t\t\t\t\t\t{error}\n\t\t\t\t\t</Message>\n\t\t\t\t)}\n\t\t\t\t<Form onSubmit={this.onSubmit} \n\t\t\t\t\t\tonChange={this.onChange} \n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tfields={fields}\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nLoginPage.propTypes = {\n\tlogIn: PropTypes.func.isRequired,\n\thistory: PropTypes.object.isRequired\n};\n\nexport default connect(null, {logIn})(LoginPage);","import {LOG_IN, LOG_OUT, REMOVE_TRANSACTIONS, REMOVE_ACCOUNTS} from '../actionTypes';\nimport {apiCall} from '../../services/api';\n\nexport function logIn(username, password) {\n\treturn dispatch => {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst resp = await apiCall('post', '/auth/signin', {username, password});\n\t\t\t\tif(resp.error){\n\t\t\t\t\treturn reject(resp.error);\n\t\t\t\t}\n\t\t\t\tif(!resp.token){\n\t\t\t\t\treturn reject('Error getting token');\n\t\t\t\t}\n\t\t\t\tlocalStorage.setItem('token', resp.token);\n\t\t\t\tdispatch({type: LOG_IN, ...resp});\n\t\t\t\treturn resolve();\n\t\t\t} catch(err) {\n\t\t\t\treturn reject(err.message);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function signUp(username, password){\n\treturn dispatch => {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst resp = await apiCall('post', '/auth/signup', {username, password});\n\t\t\t\tif(resp.error){\n\t\t\t\t\treturn reject(resp.error);\n\t\t\t\t}\n\t\t\t\tif(!resp.token){\n\t\t\t\t\treturn reject('Error getting token');\n\t\t\t\t}\n\t\t\t\tlocalStorage.setItem('token', resp.token);\n\t\t\t\tdispatch({type: LOG_IN, ...resp});\n\t\t\t\treturn resolve();\n\t\t\t} catch(err) {\n\t\t\t\treturn reject(err.message);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function logOut() {\n\treturn dispatch => {\n\t\tlocalStorage.removeItem('token');\n\t\tdispatch({type: LOG_OUT});\n\t\tdispatch({type: REMOVE_TRANSACTIONS});\n\t\tdispatch({type: REMOVE_ACCOUNTS});\n\t}\n}","import {GET_TRANSACTIONS, UPDATE_BALANCE} from '../actionTypes';\nimport {apiCall} from '../../services/api';\n\nexport function getTransactions(accountId){\n\treturn dispatch => {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst resp = await apiCall('get', `/accounts/${accountId}/transactions/`, {});\n\t\t\t\tif(resp.error){\n\t\t\t\t\treturn reject(new Error(resp.error));\n\t\t\t\t}\n\t\t\t\tconst transactions = resp.sort((a, b) => b.transactionNumber - a.transactionNumber);\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: GET_TRANSACTIONS,\n\t\t\t\t\taccountId,\n\t\t\t\t\ttransactions\n\t\t\t\t});\n\t\t\t\treturn resolve();\n\t\t\t} catch(err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t});\n\t};\n}\n\nexport function generateTransactions(num, accountId){\n\treturn dispatch => {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst resp = await apiCall('post', `/accounts/${accountId}/transactions/generate/${num}`, {});\n\t\t\t\t\n\t\t\t\tif(resp.error) {\n\t\t\t\t\treturn reject(new Error(resp.error));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst transactions = resp.sort((a, b) => b.transactionNumber - a.transactionNumber);\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: GET_TRANSACTIONS,\n\t\t\t\t\taccountId,\n\t\t\t\t\ttransactions\n\t\t\t\t});\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_BALANCE,\n\t\t\t\t\taccountId,\n\t\t\t\t\taccountBalance: transactions[0].accountBalance\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn resolve();\n\t\t\t} catch(err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function createTransaction(transaction, accountId){\n\treturn dispatch => {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst resp = await apiCall('post', `/accounts/${accountId}/transactions/`, transaction);\n\t\t\t\t\n\t\t\t\tif(resp.error){\n\t\t\t\t\treturn reject(new Error(resp.error));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst transactions = resp.sort((a, b) => b.transactionNumber - a.transactionNumber);\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: GET_TRANSACTIONS,\n\t\t\t\t\taccountId,\n\t\t\t\t\ttransactions\n\t\t\t\t});\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_BALANCE,\n\t\t\t\t\taccountId,\n\t\t\t\t\taccountBalance: transactions[0].accountBalance\n\t\t\t\t});\n\n\t\t\t\treturn resolve();\n\t\t\t} catch(err){\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t});\n\t}\n}","import {GET_ACCOUNTS, CLOSE_ACCOUNT} from '../actionTypes';\nimport {apiCall} from '../../services/api';\n\nexport function getAccounts(){\n    return dispatch => {\n        return new Promise(async (resolve, reject) => {\n            try  {\n                const resp = await apiCall('get', '/accounts', {});\n                if(resp.error){\n                    return reject(new Error(resp.error));\n                }\n                dispatch({\n                    type: GET_ACCOUNTS,\n                    accounts: resp\n                });\n                return resolve();\n            } catch (err) {\n                return reject(err);\n            }\n        });\n    }\n}\n\nexport function createAccount(accountType){\n    return dispatch => {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const resp = await apiCall('post', '/accounts', {type: accountType});\n                if(resp.error){\n                    return reject(new Error(resp.error));\n                }\n                dispatch({\n                    type: GET_ACCOUNTS,\n                    accounts: resp\n                });\n                return resolve();\n            } catch(err) {\n                return reject(err);\n            }\n        })\n    }\n}\n\nexport function deleteAccount(accountId){\n    return dispatch => {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const resp = await apiCall('delete', `/accounts/${accountId}`, {});\n                if(resp.error) {\n                    return reject(new Error(resp.error));\n                }\n                dispatch({\n                    type: CLOSE_ACCOUNT,\n                    accountId\n                })\n                return resolve();\n            } catch(err) {\n                return reject(err);\n            }\n        });\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Balance.css';\n\nconst Balance = ({accountBalance}) => {\n\treturn (\n\t\t<div className=\"Balance\">\n            <strong>Balance</strong>: ${accountBalance.toFixed(2)}\n        </div>\n\t);\n}\n\nBalance.propTypes = {\n\taccountBalance: PropTypes.number.isRequired\n};\n\nexport default Balance;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ItemList.css';\n\nconst ItemList = ({items, itemProps, ItemComponent, itemName}) => (\n    <div className=\"ItemList-container\">\n        {items && \n        items.map(t => { \n            const propObj = {};\n            Object.keys(itemProps).forEach(p => propObj[p] = t[itemProps[p]]);\n            return <ItemComponent {...propObj} />;\n        })}\n        {!items.length && (\n            <div className='ItemList-placeholder'>\n                You don't have any {itemName} yet!\n            </div>\n        )}\n    </div>\n);\n\nItemList.propTypes = {\n    items: PropTypes.array.isRequired,\n    itemProps: PropTypes.object,\n    ItemComponent: PropTypes.elementType.isRequired,\n    itemName: PropTypes.string.isRequired\n};\n\nexport default ItemList;","import React from 'react';\nimport dayjs from 'dayjs';\nimport PropTypes from 'prop-types';\nimport './Transaction.css';\n\nconst Transaction = ({description, date, amount, accountBalance}) => (\n    <div className='Transaction-transaction'>\n        <div className='Transaction-container'>\n            <div>\n                <div className='Transaction-recipient'>\n                    {description} \n                </div>\n                <div className='Transaction-date'>\n                    {dayjs(date).format('MM/DD/YYYY h:mmA')} \n                </div>\n            </div>\n            <div>\n                <div className='Transaction-amount'>\n                    ${amount.toFixed(2)}\n                </div>\n                <div className='Transaction-balance'>\n                    ${accountBalance.toFixed(2)}\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nTransaction.propTypes = {\n    description: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    amount: PropTypes.number.isRequired,\n    accountBalance: PropTypes.number.isRequired\n};\n\nexport default Transaction;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {getTransactions} from '../store/actions/transactions';\nimport {deleteAccount} from '../store/actions/accounts';\nimport Button from '../components/Button';\nimport Balance from '../components/Balance';\nimport ItemList from '../components/ItemList';\nimport Transaction from '../components/Transaction';\nimport PropTypes from 'prop-types';\nimport './TransactionPage.css';\n\nclass TransactionPage extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.closeAccount = this.closeAccount.bind(this);\n\t}\n\n\tcomponentDidMount(){\n\t\tconst accountId = this.props.match.params.accountId;\n\t\tif(!this.props.transactionReducer[accountId]?.lastUpdated){\n\t\t\tthis.props.getTransactions(accountId);\n\t\t}\n\t}\n\n\tcloseAccount(e){\n\t\te.preventDefault();\n\t\tthis.props.deleteAccount(this.props.match.params.accountId)\n\t\t\t.then(() => this.props.history.push('/accounts'));\n\t}\n\t\n\trender(){\n\t\tconst {match, transactionReducer, accounts} = this.props;\n\n\t\tconst accountId = match.params.accountId;\n\t\tif(!transactionReducer[accountId]){\n\t\t\treturn <div></div>;\n\t\t}\n\t\t\n\t\tconst transactions = transactionReducer[accountId].transactions;\n\t\tconst accountType = accounts.find(a => a._id === accountId)?.type;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2 className='TransactionPage-message'>Review your transactions.</h2>\n\t\t\t\t<p className='TransactionPage-account-type'>{accountType} Account</p>\n\t\t\t\t<div className='TransactionPage-btn-container'>\n\t\t\t\t\t<Button to={`/accounts/${accountId}/transactions/new`}>New Transaction</Button>\n\t\t\t\t\t<Balance accountBalance={transactions[0] ? transactions[0].accountBalance : 0} />\n\t\t\t\t</div>\n\t\t\t\t<ItemList items={transactions} ItemComponent={Transaction} itemName='transactions' itemProps={{\n\t\t\t\t\tdate: 'date',\n\t\t\t\t\tdescription: 'description',\n\t\t\t\t\tamount: 'amount',\n\t\t\t\t\taccountBalance: 'accountBalance',\n\t\t\t\t\tkey: 'transactionNumber'\n\t\t\t\t}} />\n\t\t\t\t<h2 className='TransactionPage-message'>Close your account.</h2>\n                <form className='TransactionPage-close-account-container'>\n                    <Button className='TransactionPage-close-btn' onClick={this.closeAccount} form>Close {accountType} Account</Button>\n                </form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state){\n\treturn {\n\t\ttransactionReducer: state.transactionReducer,\n\t\taccounts: state.accountReducer.accounts,\n\t};\n}\n\nTransactionPage.propTypes = {\n\ttransactionReducer: PropTypes.object.isRequired,\n\taccounts: PropTypes.array.isRequired,\n\tgetTransactions: PropTypes.func.isRequired,\n\tdeleteAccount: PropTypes.func.isRequired,\n\tmatch: PropTypes.object.isRequired,\n\thistory: PropTypes.object.isRequired\n};\n\nexport default connect(mapStateToProps, {getTransactions, deleteAccount})(TransactionPage);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nfunction withAuth(ComponentToRender){\n\tclass Authenticate extends Component {\n\t\tcomponentDidMount(){\n\t\t\tif(!this.props.userId){\n\t\t\t\tthis.props.history.push('/login');\n\t\t\t}\n\t\t}\n\t\t\n\t\tcomponentDidUpdate(){\n\t\t\tif(!this.props.userId){\n\t\t\t\tthis.props.history.push('/login');\n\t\t\t}\n\t\t}\n\t\t\n\t\trender(){\n\t\t\tif(!this.props.userId){\n\t\t\t\treturn <div>Loading...</div>;\n\t\t\t} else {\n\t\t\t\treturn <ComponentToRender {...this.props} />;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction mapStateToProps(state){\n\t\treturn {\n\t\t\tuserId: state.authReducer.userId\n\t\t};\n\t}\n\t\n\treturn connect(mapStateToProps)(Authenticate);\n}\n\nexport default withAuth;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {signUp} from '../store/actions/auth';\nimport Message from '../components/Message';\nimport Form from '../components/Form';\nimport PropTypes from 'prop-types';\nimport './SignupPage.css';\n\nclass SignupPage extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tpassword: '',\n\t\t\trepeatPassword: '',\n\t\t\tloading: false,\n\t\t\terror: ''\n\t\t};\n\t}\n\t\n\tonChange = e => {\n\t\tthis.setState({...this.state, [e.target.name]: e.target.value});\n\t}\n\t\n\tonSubmit = e => {\n\t\te.preventDefault();\n\t\tthis.setState({...this.state, loading: true});\n\t\tif(this.state.password !== this.state.repeatPassword){\n\t\t\treturn this.setState({...this.state, loading: false, error: \"Your passwords don't match\"});\n\t\t}\n\t\tthis.props.signUp(this.state.username, this.state.password)\n\t\t\t.then(() => {\n\t\t\t\tthis.setState({...this.state, loading: false, error: ''});\n\t\t\t\tthis.props.history.push('/accounts');\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tthis.setState({...this.state, loading: false, error: err});\n\t\t\t});\n\t}\n\t\n\trender() {\n\t\tconst {username, password, repeatPassword, error, loading} = this.state;\n\n\t\tconst fields = [\n\t\t\t{label: 'Username', name: 'username', type: 'text', value: username},\n\t\t\t{label: 'Password', name: 'password', type: 'password', value: password},\n\t\t\t{label: 'Repeat Password', name: 'repeatPassword', type: 'password', value: repeatPassword}\n\t\t];\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2 className='SignupPage-message'>Make an account.</h2>\n\t\t\t\t{error && (\n\t\t\t\t\t<Message>\n\t\t\t\t\t\t{error}\n\t\t\t\t\t</Message>\n\t\t\t\t)}\n\t\t\t\t<Form onSubmit={this.onSubmit} \n\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\tfields={fields}\n\t\t\t\t\t\tloading={loading} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSignupPage.propTypes = {\n\tsignUp: PropTypes.func.isRequired,\n\thistory: PropTypes.object.isRequired\n};\n\nexport default connect(null, {signUp})(SignupPage);","import React from 'react';\nimport Button from './Button';\nimport PropTypes from 'prop-types';\nimport './NewTransactionForm.css';\n\nconst NewTransactionForm = ({onSubmit, transactionType, amount, \n                            onChange, counterparty, accountTypeAnotherUser, \n                            accountTypeBetweenAcc, enabledAccounts, number, loading}) => {\n    return (\n        <form className='NewTransactionForm-form' onSubmit={onSubmit}>\n            {['Deposit', 'Withdrawal', 'Transfer to another user', 'Transfer between my accounts'].includes(transactionType) && ([\n                <label key='label' htmlFor='amount'>Amount:</label>,\n                <input key='input' type='number' className='NewTransactionForm-field' name='amount' \n                        id='amount' placeholder='Amount' min='0.01' step='0.01' value={amount} \n                        onChange={onChange} autoComplete='off' autoCorrect='off' autoCapitalize='none' required />\n            ])}\n\n            {['Transfer to another user'].includes(transactionType) && ([\n                <label key='label-counterparty' htmlFor='counterparty'>Counterparty:</label>,\n                <input key='input-counterparty' type='text' className='NewTransactionForm-field' name='counterparty' \n                        id='counterparty' placeholder='Counterparty' value={counterparty} \n                        onChange={onChange} autoComplete='off' autoCorrect='off' autoCapitalize='none' required />\n            ])}\n            {['Transfer to another user'].includes(transactionType) && ([\n                <label key='label-accountType' htmlFor='accountTypeAnotherUser'>Account Type:</label>,\n                <div className='NewTransactionForm-radio-container' key='radio-container'>\n                    <div>\n                        <input type='radio' id='Checking' className='NewTransactionForm-radio' value='Checking' name='accountTypeAnotherUser' \n                            onChange={onChange} checked={accountTypeAnotherUser === 'Checking'} />\n                        <label htmlFor='Checking'>Checking</label>\n                    </div>\n                    <div>\n                        <input type='radio' id='Savings' className='NewTransactionForm-radio' value='Savings' name='accountTypeAnotherUser' \n                            onChange={onChange} checked={accountTypeAnotherUser === 'Savings'} />\n                        <label htmlFor='Savings'>Savings</label>\n                    </div>\n                    <div>\n                        <input type='radio' id='Investing' className='NewTransactionForm-radio' value='Investing' name='accountTypeAnotherUser' \n                            onChange={onChange} checked={accountTypeAnotherUser === 'Investing'} />\n                        <label htmlFor='Investing'>Investing</label>\n                    </div>\n                </div>\n            ])}\n            {['Transfer between my accounts'].includes(transactionType) && ([\n                <label key='label-accountType' htmlFor='accountTypeBetweenAcc'>Account Type:</label>,\n                <div className='NewTransactionForm-radio-container' key='radio-container'>\n                    <div>\n                        <input type='radio' id='Checking' className='NewTransactionForm-radio' value='Checking' name='accountTypeBetweenAcc' \n                            onChange={onChange} checked={accountTypeBetweenAcc === 'Checking'} disabled={!enabledAccounts.includes('Checking')}/>\n\n                        <label htmlFor='Checking' className={!enabledAccounts.includes('Checking') ? 'NewTransactionForm-disabled': ''}>Checking</label>\n                    </div>\n                    <div>\n                        <input type='radio' id='Savings' className='NewTransactionForm-radio' value='Savings' name='accountTypeBetweenAcc' \n                            onChange={onChange} checked={accountTypeBetweenAcc === 'Savings'} disabled={!enabledAccounts.includes('Savings')}/>\n                            \n                        <label htmlFor='Savings' className={!enabledAccounts.includes('Savings') ? 'NewTransactionForm-disabled': ''}>Savings</label>\n                    </div>\n                    <div>\n                        <input type='radio' id='Investing' className='NewTransactionForm-radio' value='Investing' name='accountTypeBetweenAcc' \n                            onChange={onChange} checked={accountTypeBetweenAcc === 'Investing'} disabled={!enabledAccounts.includes('Investing')}/>\n                            \n                        <label htmlFor='Investing' className={!enabledAccounts.includes('Investing') ? 'NewTransactionForm-disabled': ''}>Investing</label>\n                    </div>\n                </div>\n            ])}\n\n            {['Generate'].includes(transactionType) && ([\n                <label key='label' htmlFor='number'>Number:</label>,\n                <input key='input' type='number' className='NewTransactionForm-field' name='number' \n                        id='number' placeholder='Number' min='1' step='1' value={number} \n                        onChange={onChange} autoComplete='off' autoCorrect='off' autoCapitalize='none' required />\n            ])}\n\n            <Button form className='NewTransactionForm-form-btn'>\n                {loading ? 'Loading...' : 'Create Transaction'}\n            </Button>\n        </form>\n    );\n}\n\nNewTransactionForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    transactionType: PropTypes.string.isRequired, \n    amount: PropTypes.string.isRequired, \n    onChange: PropTypes.func.isRequired, \n    counterparty: PropTypes.string.isRequired, \n    accountTypeAnotherUser: PropTypes.string.isRequired, \n    accountTypeBetweenAcc: PropTypes.string.isRequired,\n    enabledAccounts: PropTypes.array.isRequired, \n    number: PropTypes.string.isRequired, \n    loading: PropTypes.bool.isRequired\n};\n\nexport default NewTransactionForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './RadioContainer.css';\n\nconst RadioContainer = ({radios, name, onChange}) => {\n    const radioElements = radios.map(r => {\n        return (\n            <div key={r.label}>\n                <input type='radio' id={r.label} className='RadioContainer-radio' value={r.label} name={name} \n                    onChange={onChange} checked={r.checked} disabled={r.disabled}/>\n                <label htmlFor={r.label} className={r.disabled ? 'RadioContainer-disabled': ''}>{r.label}</label>\n            </div>\n        );\n    });\n    return (\n        <div>\n            <div className='RadioContainer-container'>\n                {radioElements}\n            </div>\n        </div>\n    )\n};\n\nRadioContainer.propTypes = {\n    radios: PropTypes.array.isRequired,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\nexport default RadioContainer;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {generateTransactions, createTransaction, getTransactions} from '../store/actions/transactions';\nimport NewTransactionForm from '../components/NewTransactionForm';\nimport Message from '../components/Message';\nimport {getAccounts} from '../store/actions/accounts';\nimport RadioContainer from '../components/RadioContainer';\nimport PropTypes from 'prop-types';\nimport './NewTransactionPage.css';\n\nclass NewTransactionPage extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnumber: '',\n\t\t\tamount: '',\n\t\t\tcounterparty: '',\n\t\t\ttransactionType: 'Deposit',\n\t\t\taccountTypeAnotherUser: '',\n\t\t\taccountTypeBetweenAcc: '',\n\t\t\terr: '',\n\t\t\tloading: false\n\t\t};\n\t\tthis.create = this.create.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t}\n\n\tcomponentDidMount(){\n        if(!this.props.lastUpdated){\n            this.props.getAccounts();\n        }\n    }\n\t\n\tcreate(transaction){\n\t\tconst accountId = this.props.match.params.accountId;\n\t\tthis.setState({...this.state, loading: true});\n\t\treturn this.props.createTransaction(transaction, accountId)\n\t\t\t.then(() => {\n\t\t\t\tthis.setState({...this.state, loading: false, err: ''});\n\t\t\t\tthis.props.history.push(`/accounts/${accountId}`);\n\t\t\t})\n\t\t\t.catch(err => this.setState({...this.state, loading: false, err: err.message}));\n\t}\n\n\tonSubmit(e){\n\t\te.preventDefault();\n\t\tconst accountId = this.props.match.params.accountId;\n\t\tswitch(this.state.transactionType){\n\t\t\tcase 'Deposit':\n\t\t\t\tthis.create({\n\t\t\t\t\tamount: this.state.amount,\n\t\t\t\t\ttype: 'Deposit',\n\t\t\t\t\tdescription: 'Deposit'\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'Withdrawal':\n\t\t\t\tthis.create({\n\t\t\t\t\tamount: -1*this.state.amount,\n\t\t\t\t\ttype: 'Withdrawal',\n\t\t\t\t\tdescription: 'Withdrawal'\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'Transfer to another user':\n\t\t\t\tthis.create({\n\t\t\t\t\tamount: -1*this.state.amount,\n\t\t\t\t\tcounterparty: this.state.counterparty,\n\t\t\t\t\taccountType: this.state.accountTypeAnotherUser,\n\t\t\t\t\ttype: 'Transfer',\n\t\t\t\t\tdescription: 'Transfer to ' + this.state.counterparty\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'Transfer between my accounts':\n\t\t\t\tthis.create({\n\t\t\t\t\tamount: -1*this.state.amount,\n\t\t\t\t\tcounterparty: this.props.username,\n\t\t\t\t\taccountType: this.state.accountTypeBetweenAcc,\n\t\t\t\t\ttype: 'Transfer',\n\t\t\t\t\tdescription: `Transfer to my ${this.state.accountTypeBetweenAcc} account`\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.props.getAccounts();\n\t\t\t\t\tconst recipientAccountId = this.props.accounts.find(a => a.type === this.state.accountTypeBetweenAcc)._id;\n\t\t\t\t\tthis.props.getTransactions(recipientAccountId);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'Generate':\n\t\t\t\tthis.setState({...this.state, loading: true});\n\t\t\t\tthis.props.generateTransactions(+this.state.number, accountId)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tthis.setState({...this.state, loading: false, err: ''});\n\t\t\t\t\t\tthis.props.history.push(`/accounts/${accountId}`);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => this.setState({...this.state, loading: false, err: err.message}));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.setState({...this.state, err: \"Couldn't process request\"});\n\t\t}\n\t}\n\t\n\tonChange(e){\n\t\tthis.setState({...this.state, [e.target.name]: e.target.value});\n\t}\n\t\n\trender() {\n\t\tconst {accounts, match} = this.props;\n\t\tconst {transactionType, err, amount, counterparty, number, \n\t\t\tloading, accountTypeAnotherUser, accountTypeBetweenAcc} = this.state;\n\n\t\tconst enabledAccounts = [];\n\t\taccounts.forEach(a => {\n\t\t\tif(a._id !== match.params.accountId) {\n\t\t\t\tenabledAccounts.push(a.type);\n\t\t\t}\n\t\t});\n\n\t\tconst radios = [\n\t\t\t{label: 'Deposit', checked: transactionType === 'Deposit'},\n\t\t\t{label: 'Withdrawal', checked: transactionType === 'Withdrawal'},\n\t\t\t{label: 'Transfer to another user', checked: transactionType === 'Transfer to another user'},\n\t\t\t{label: 'Transfer between my accounts', checked: transactionType === 'Transfer between my accounts'},\n\t\t\t{label: 'Generate', checked: transactionType === 'Generate'}\n\t\t];\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2 className='NewTransactionPage-message'>Select a transaction type.</h2>\n\t\t\t\t<RadioContainer radios={radios} name='transactionType' onChange={this.onChange}/>\n\t\t\t\t<h2 className='NewTransactionPage-message'>Enter your transaction details.</h2>\n\t\t\t\t{err && (\n\t\t\t\t\t<Message>\n\t\t\t\t\t\t{err}\n\t\t\t\t\t</Message>\n\t\t\t\t)}\n\t\t\t\t<NewTransactionForm transactionType={transactionType} amount={amount} \n\t\t\t\t\t\t\t\t\tcounterparty={counterparty} number={number} \n\t\t\t\t\t\t\t\t\tloading={loading} accountTypeAnotherUser={accountTypeAnotherUser} \n\t\t\t\t\t\t\t\t\taccountTypeBetweenAcc={accountTypeBetweenAcc} enabledAccounts={enabledAccounts} \n\t\t\t\t\t\t\t\t\tonChange={this.onChange} onSubmit={this.onSubmit}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state){\n\treturn {\n\t\tusername: state.authReducer.username,\n\t\taccounts: state.accountReducer.accounts,\n\t\tlastUpdated: state.accountReducer.lastUpdated\n\t};\n}\n\nNewTransactionPage.propTypes = {\n\tlastUpdated: PropTypes.number,\n\tgetAccounts: PropTypes.func.isRequired,\n\tmatch: PropTypes.object.isRequired,\n\tcreateTransaction: PropTypes.func.isRequired,\n\thistory: PropTypes.object.isRequired,\n\tusername: PropTypes.string.isRequired,\n\taccounts: PropTypes.array.isRequired,\n\tgetTransactions: PropTypes.func.isRequired,\n\tgenerateTransactions: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, {generateTransactions, createTransaction, getAccounts, getTransactions})(NewTransactionPage);","import React from 'react';\nimport './Hero.css';\n\nconst Hero = () => (\n    <div className=\"Hero-main-container\">\n        <div className=\"Hero-main-text\">\n            <h2>Banking Reimagined.</h2>\n            <p>Start saving for the future of your dreams.</p>\n        </div>\n        <img className=\"Hero-coins-growing\" src={'https://bank-of-wasserstein.s3.amazonaws.com/coins-growing.jpeg'} alt=\"coins growing\" />\n    </div>\n);\n\nexport default Hero;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Feature.css';\n\nconst Feature = ({title, description, img, alt}) => (\n    <div className=\"Feature\">\n        <img className=\"Feature-image\" src={img} alt={alt} />\n        <div className=\"Feature-text\">\n            <h3>{title}</h3>\n            <p>{description}</p>\n        </div>\n    </div>\n);\n\nFeature.propTypes = {\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    img: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired\n};\n\nexport default Feature;","import React from 'react';\nimport Hero from './Hero';\nimport Feature from './Feature';\nimport Button from './Button';\nimport './LandingPage.css';\n\nconst LandingPage = () => {\n    return (\n        <div>\n            <main className='LandingPage-main'>\n                <Hero />\n            </main>\n            <section className=\"LandingPage-secondary-container\" key='LandingPage-secondary-container'>\n                <Feature title='Make Deposits.' description='Deposit your spare cash with our easy-to-use system.' img={'https://bank-of-wasserstein.s3.amazonaws.com/piggybank.jpeg'} alt='piggy bank' />\n                <Feature title='Make Withdrawals.' description='Access your cash when you need it, from the convenience of your laptop.' img={'https://bank-of-wasserstein.s3.amazonaws.com/atm.jpeg'}  alt='atm' />\n                <Feature title='Make Transfers.' description='Transfer money to your friends with the click of a button.' img={'https://bank-of-wasserstein.s3.amazonaws.com/money.jpeg'} alt='money and pen' />\n                <div className=\"LandingPage-join\">\n                    <h3>Join Today!</h3>\n                    <Button to=\"/signup\">Sign Up</Button>\n                </div>\n            </section>\n            <footer className='LandingPage-footer'>\n                Copyright © 2021, Justin Wasserstein\n            </footer>\n        </div>\n        );\n};\n\nexport default LandingPage;","import React from 'react';\nimport './AboutPage.css';\n\nconst AboutPage = () => (\n    <div>\n        <div className='AboutPage-container'>\n            <h2 className='AboutPage-title'>About BANK OF WASSERSTEIN</h2>\n            <p>BANK OF WASSERSTEIN is a demonstration banking application that allows users to create \n                checking, savings, and investing accounts, submit deposits and withdrawals, and transfer \n                money to other users. It’s a single page, fullstack application that uses React and \n                Redux on the frontend and Node.js, Express, and MongoDB on the backend. The frontend is \n                served by GitHub Pages and the backend runs on Heroku with a managed database provided by \n                MongoDB Atlas. It was designed using Figma.</p>\n            <p>Handcrafted with <span className='AboutPage-heart'>❤</span> in Glastonbury, Connecticut.</p>\n            <div className='AboutPage-icon-container'>\n                <a href='https://github.com/jwasserstein/bank-of-wasserstein-frontend' target='_blank' rel='noreferrer'>\n                    <span className=\"iconify\" data-icon=\"ant-design:github-filled\" data-inline=\"false\"></span>\n                    <p>GitHub</p>\n                    <p>frontend</p>\n                </a>\n                <a href='https://github.com/jwasserstein/bank-of-wasserstein-backend' target='_blank' rel='noreferrer'>\n                    <span className=\"iconify\" data-icon=\"ant-design:github-filled\" data-inline=\"false\"></span>\n                    <p>GitHub</p>\n                    <p>backend</p>\n                </a>\n                <a href='https://www.wasserstein.dev/' target='_blank' rel='noreferrer'>\n                    <span className=\"iconify\" data-icon=\"ant-design:folder-outlined\" data-inline=\"false\"></span>\n                    <p>Portfolio</p>\n                </a>\n                <a href='https://www.linkedin.com/in/justin-wasserstein' target='_blank' rel='noreferrer'>\n                    <span className=\"iconify\" data-icon=\"ant-design:linkedin-filled\" data-inline=\"false\"></span>\n                    <p>LinkedIn</p>\n                </a>\n                <a href='https://jwasserstein.s3.amazonaws.com/Resume+-+Wasserstein.pdf' target='_blank' rel='noreferrer'>\n                    <span className=\"iconify\" data-icon=\"fa-regular:clipboard\" data-inline=\"false\"></span>\n                    <p>Resume</p>\n                </a>\n            </div>\n        </div>\n    </div>\n);\n\nexport default AboutPage;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport './ProfilePage.css';\nimport dayjs from 'dayjs';\nimport {apiCall} from '../services/api';\nimport Message from '../components/Message';\nimport Form from '../components/Form';\nimport PropTypes from 'prop-types';\n\nclass ProfilePage extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            currentPassword: '',\n            newPassword: '',\n            repeatNewPassword: '',\n            loading: false,\n            message: '',\n            messageColor: ''\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(e){\n        this.setState({...this.state, [e.target.name]: e.target.value});\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        if(this.state.newPassword !== this.state.repeatNewPassword){\n            return this.setState({...this.state,\n                        currentPassword: '',\n                        newPassword: '',\n                        repeatNewPassword: '',\n                        message: 'New passwords must match',\n                        messageColor: 'red'\n                    });\n        }\n\n        this.setState({...this.state, loading: true});\n        apiCall('POST', `/auth/changePassword`, {\n            currentPassword: this.state.currentPassword,\n            newPassword: this.state.newPassword,\n            repeatNewPassword: this.state.repeatNewPassword\n        })\n            .then(response => {\n                    const message = 'error' in response ? response.error : response.message;\n                    const color = 'error' in response ? 'red' : 'green';\n                    this.setState({\n                        currentPassword: '',\n                        newPassword: '',\n                        repeatNewPassword: '',\n                        loading: false,\n                        message: message,\n                        messageColor: color\n                    });\n            });\n    }\n\n    render() {\n        const {currentPassword, newPassword, repeatNewPassword, \n            message, messageColor, loading} = this.state;\n        const {username, joinDate} = this.props;\n\n        const fields = [\n            {label: 'Current Password', name: 'currentPassword', type: 'password', value: currentPassword},\n            {label: 'New Password', name: 'newPassword', type: 'password', value: newPassword},\n            {label: 'Repeat New Password', name: 'repeatNewPassword', type: 'password', value: repeatNewPassword}\n        ];\n\n        return (\n            <div style={{marginBottom: '20px'}}>\n                <h2 className='ProfilePage-message'>View your profile.</h2>\n                <div className='ProfilePage-fields'>\n                    <div>\n                        <h3 className='ProfilePage-field-title'>Username</h3>\n                        <p className='ProfilePage-field-value'>{username}</p>\n                    </div>\n                    <div>\n                        <h3 className='ProfilePage-field-title'>Join Date</h3>\n                        <p className='ProfilePage-field-value'>{dayjs(joinDate).format('MM/DD/YYYY h:mmA')}</p>\n                    </div>\n                </div>\n                <h2 className='ProfilePage-message'>Change your password.</h2>\n                {message && (\n                    <Message color={messageColor} >\n                        {message}\n                    </Message>\n                )}\n                <Form onSubmit={this.onSubmit} \n                        onChange={this.onChange}\n                        fields={fields}\n                        loading={loading}/>\n                \n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        userId: state.authReducer.userId,\n        username: state.authReducer.username,\n        joinDate: state.authReducer.joinDate\n    };\n}\n\nProfilePage.propTypes = {\n    userId: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    joinDate: PropTypes.string.isRequired\n};\n\nexport default connect(mapStateToProps, null)(ProfilePage);","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Account.css';\n\nconst Account = ({link, type, accountBalance}) => (\n    <Link className='Account-account' to={link}>\n        <div className='Account-container'>\n            <div className='Account-type'>\n                {type} Account\n            </div>\n            <div className='Account-balance'>\n                ${accountBalance.toFixed(2)}\n            </div>\n        </div>\n    </Link>\n);\n\nAccount.propTypes = {\n    link: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    accountBalance: PropTypes.number.isRequired\n};\n\nexport default Account;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Account from '../components/Account';\nimport Button from '../components/Button';\nimport Balance from '../components/Balance';\nimport ItemList from '../components/ItemList';\nimport {getAccounts} from '../store/actions/accounts';\nimport PropTypes from 'prop-types';\nimport './AccountsPage.css';\n\nclass AccountsPage extends Component {\n    componentDidMount(){\n        if(!this.props.lastUpdated){\n            this.props.getAccounts();\n        }\n    }\n\n    render() {\n        const {accounts} = this.props;\n\n        const totalBalance = accounts && accounts.reduce((acc, next) => acc + next.accountBalance, 0);\n        const accountArray = accounts && accounts.map(a => ({...a, link: `/accounts/${a._id}`}));  //create a link property to make it easier to pass data to ItemList\n\n        return (\n            <div>\n                <h2 className='AccountsPage-message'>Select an account.</h2>\n                <div className=\"AccountsPage-btn-container\">\n                    <Button to='/accounts/new'>New Account</Button>\n                    <Balance accountBalance={totalBalance} />\n                </div>\n                <ItemList items={accountArray} ItemComponent={Account} itemName='accounts' itemProps={{\n                        type: 'type',\n                        link: 'link',\n                        accountBalance: 'accountBalance',\n                        key: 'type'\n                    }}/>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        accounts: state.accountReducer.accounts,\n        lastUpdated: state.accountReducer.lastUpdated\n    };\n}\n\nAccountsPage.propTypes = {\n    accounts: PropTypes.array,\n    lastUpdated: PropTypes.number,\n    getAccounts: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, {getAccounts})(AccountsPage);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {createAccount} from '../store/actions/accounts';\nimport Message from '../components/Message';\nimport Button from '../components/Button';\nimport RadioContainer from '../components/RadioContainer';\nimport PropTypes from 'prop-types';\nimport './NewAccountPage.css';\n\nclass NewAccountPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            accountType: '',\n            err: '',\n            loading: false\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(e){\n        this.setState({...this.state, [e.target.name]: e.target.value});\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        this.setState({...this.state, loading: true});\n        this.props.createAccount(this.state.accountType)\n            .then(() => {\n                this.setState({...this.state, loading: false, err: ''});\n                this.props.history.push('/accounts');\n            })\n            .catch(err => {\n                this.setState({...this.state, loading: false, err: err.message});\n            });\n    }\n\n    render(){\n        const {accounts} = this.props;\n        const {accountType, err, loading} = this.state;\n\n        const existingAccounts = accounts.map(a => a.type);\n        const radios = [\n            {label: 'Checking', checked: accountType === 'Checking', disabled: existingAccounts.includes('Checking')},\n            {label: 'Savings', checked: accountType === 'Savings', disabled: existingAccounts.includes('Savings')},\n            {label: 'Investing', checked: accountType === 'Investing', disabled: existingAccounts.includes('Investing')},\n        ];\n\n        return (\n            <div>\n                <h2 className='NewAccountPage-message'>Select an account type.</h2>\n                {err && (\n                    <Message>\n                        {err}\n                    </Message>\n                )}\n                <form className='NewAccountForm-form' onSubmit={this.onSubmit}>\n                    <RadioContainer radios={radios} name='accountType' onChange={this.onChange} />\n                    <Button form className='NewAccountForm-form-btn'>\n                        {loading ? 'Loading...' : 'Create Account'}\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        accounts: state.accountReducer.accounts\n    };\n}\n\nNewAccountPage.propTypes = {\n    accounts: PropTypes.array.isRequired,\n    createAccount: PropTypes.func.isRequired,\n    history: PropTypes.object.isRequired\n};\n\nexport default connect(mapStateToProps, {createAccount})(NewAccountPage);","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {logOut} from '../store/actions/auth';\nimport PropTypes from 'prop-types';\nimport './Navbar.css';\n\nclass Navbar extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {menuActive: ''};\n\t\tthis.toggleMenu = this.toggleMenu.bind(this);\n\t\tthis.closeMenu = this.closeMenu.bind(this);\n\t}\n\n\ttoggleMenu(){\n\t\tif(this.state.menuActive === ''){\n\t\t\tthis.setState({menuActive: 'active'});\n\t\t} else {\n\t\t\tthis.setState({menuActive: ''});\n\t\t}\n\t}\n\n\tcloseMenu(){\n\t\tthis.setState({menuActive: ''});\n\t}\n\n\trender() {\n\t\tconst {username, logOut} = this.props;\n\t\tconst {menuActive} = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className='Navbar-spacer'></div>\n\t\t\t\t<header className={'Navbar ' + menuActive}>\n\t\t\t\t\t<div className='Navbar-burger' onClick={this.toggleMenu}>\n\t\t\t\t\t\t<span className='Navbar-bar'></span>\n\t\t\t\t\t\t<span className='Navbar-bar'></span>\n\t\t\t\t\t\t<span className='Navbar-bar'></span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Link onClick={this.closeMenu} to='/' className='Navbar-brand'><h1>BANK OF WASSERSTEIN</h1></Link>\n\t\t\t\t\t<div className='Navbar-links-left'>\n\t\t\t\t\t\t<Link onClick={this.closeMenu} to='/' className='Navbar-link'>Home</Link>\n\t\t\t\t\t\t<Link onClick={this.closeMenu} to='/accounts' className='Navbar-link'>Accounts</Link>\n\t\t\t\t\t\t<Link onClick={this.closeMenu} to='/about' className='Navbar-link'>About</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t{username ?\n\t\t\t\t\t\t<div className='Navbar-links-right'>\n\t\t\t\t\t\t\t<Link onClick={this.closeMenu} to='/profile' className='Navbar-link'>{username}</Link>\n\t\t\t\t\t\t\t<Link onClick={() => {\n\t\t\t\t\t\t\t\tthis.closeMenu(); \n\t\t\t\t\t\t\t\tlogOut();\n\t\t\t\t\t\t\t\t}} to='/login' className='Navbar-link Navbar-signup-btn' >Sign Out</Link>\n\t\t\t\t\t\t</div> : \n\t\t\t\t\t\t<div className='Navbar-links-right'>\n\t\t\t\t\t\t\t<Link onClick={this.closeMenu} to='/login' className='Navbar-link'>Log In</Link>\n\t\t\t\t\t\t\t<Link onClick={this.closeMenu} to='/signup' className='Navbar-link Navbar-signup-btn'>Sign Up</Link>\n\t\t\t\t\t\t</div>}\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n} \n\nfunction mapStateToProps(state){\n\treturn {\n\t\tusername: state.authReducer.username\n\t};\n}\n\nNavbar.propTypes = {\n\tusername: PropTypes.string,\n\tlogOut: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, {logOut})(Navbar);","import {Route, Switch} from 'react-router-dom';\nimport LoginPage from './LoginPage';\nimport TransactionPage from './TransactionPage';\nimport withAuth from '../hocs/withAuth';\nimport SignupPage from './SignupPage';\nimport NewTransactionPage from './NewTransactionPage';\nimport LandingPage from '../components/LandingPage';\nimport AboutPage from '../components/AboutPage';\nimport ProfilePage from './ProfilePage';\nimport AccountsPage from './AccountsPage';\nimport NewAccountPage from './NewAccountPage';\nimport Navbar from './Navbar';\n\nconst Main = () => (\n\t<div>\n\t\t<Navbar />\n\t\t<Switch>\n\t\t\t<Route path='/accounts/new' component={withAuth(NewAccountPage)} />\n\t\t\t<Route path='/accounts/:accountId/transactions/new' component={withAuth(NewTransactionPage)} />\n\t\t\t<Route path='/accounts/:accountId' component={withAuth(TransactionPage)} />\n\t\t\t<Route path='/accounts' component={withAuth(AccountsPage)} />\n\t\t\t<Route path='/profile' component={withAuth(ProfilePage)} />\n\t\t\t<Route path='/about' component={AboutPage} />\n\t\t\t<Route path='/signup' component={SignupPage} />\n\t\t\t<Route path='/login' component={LoginPage} />\n\t\t\t<Route path='/' component={LandingPage} />\n\t\t</Switch>\n\t</div>\n);\n\nexport default Main;","import {LOG_OUT, LOG_IN} from '../actionTypes';\n\nconst DEFAULT_STATE = {\n\tuserId: '',\n\tusername: ''\n}\n\nexport function authReducer(state=DEFAULT_STATE, action){\n\tswitch (action.type){\n\t\tcase LOG_IN:\n\t\t\treturn {...state, userId: action.id, username: action.username, joinDate: action.joinDate, loggedInAt: Date.now()};\n\t\tcase LOG_OUT:\n\t\t\treturn {...state, userId: '', username: '', joinDate: 0, loggedInAt: 0};\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}","import {GET_TRANSACTIONS, REMOVE_TRANSACTIONS} from '../actionTypes';\n\nconst DEFAULT_STATE = {};\n\nexport function transactionReducer(state=DEFAULT_STATE, action){\n\tswitch(action.type){\n\t\tcase GET_TRANSACTIONS:\n\t\t\treturn {...state, [action.accountId]: {transactions: action.transactions, lastUpdated: Date.now()}};\n\t\tcase REMOVE_TRANSACTIONS:\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import {GET_ACCOUNTS, REMOVE_ACCOUNTS, UPDATE_BALANCE, CLOSE_ACCOUNT} from '../actionTypes';\n\nconst DEFAULT_STATE = {\n    accounts: []\n};\n\nexport function accountReducer(state=DEFAULT_STATE, action){\n    switch(action.type){\n        case GET_ACCOUNTS:\n            return {...state, accounts: action.accounts, lastUpdated: Date.now()}\n        case REMOVE_ACCOUNTS:\n            return {...state, accounts: [], lastUpdated: 0}\n        case UPDATE_BALANCE:\n            const accounts = state.accounts.map(a => {\n                if(a._id !== action.accountId) return a;\n                return {...a, accountBalance: action.accountBalance, lastUpdated: Date.now()};\n            });\n            return {...state, accounts};\n        case CLOSE_ACCOUNT:\n            const remainingAccounts = state.accounts.filter(a => a._id !== action.accountId);\n            return {...state, accounts: remainingAccounts};\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport {authReducer} from './auth';\nimport {transactionReducer} from './transactions';\nimport {accountReducer} from './account';\n\nconst rootReducer = combineReducers({\n\tauthReducer,\n\ttransactionReducer,\n\taccountReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {HashRouter as Router} from 'react-router-dom';\nimport Main from './Main';\nimport {configureStore} from '../store';\nimport jwtdecode from 'jwt-decode';\nimport {LOG_IN} from '../store/actionTypes';\n\nconst store = configureStore();\n\n\n// If token already exists and isn't expired, log in\nif(localStorage.getItem('token')){\n\tconst decoded = jwtdecode(localStorage.getItem('token'));\n\tif(Date.now()/1000 - decoded.iat < 3600){\n\t\tstore.dispatch({type: LOG_IN, ...decoded});\n\t} else {\n\t\tlocalStorage.removeItem('token');\n\t}\n}\n\nconst App = () => (\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Main />\n\t\t\t</div>\n\t\t</Router>\n\t</Provider>\n);\n\nexport default App;\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport function configureStore(){\n\tlet middleware;\n\tconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\tif(process.env.NODE_ENV === 'development'){\n\t\tmiddleware = composeEnhancers(applyMiddleware(thunk));\n\t} else {\n\t\tmiddleware = applyMiddleware(thunk);\n\t}\n\n\treturn createStore(\n\t\trootReducer, \n\t\tmiddleware\n\t);\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n\t\t<App />,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}